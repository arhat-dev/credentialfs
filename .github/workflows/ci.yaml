name: CI

# yamllint disable-line rule:truthy
on:
  check_run:
    types:
    - rerequested
    - requested_action
  pull_request:
    paths-ignore:
    - docs/**
    - cicd/deploy/charts/**
    - README.md
    branches:
    - master
    - "!deps/**"
  push:
    paths-ignore:
    - docs/**
    - cicd/deploy/charts/**
    - README.md
    branches:
    - master
    tags:
    - v*

env:
  GO111MODULE: "on"

defaults:
  run:
    shell: bash

jobs:
  stylecheck:
    if: contains(github.head_ref, 'deps/') == false
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - uses: actions/setup-go@v2
      with:
        go-version: 1.16.x

    - name: Ensure tidy gomod
      run: |
        make vendor
        if ! git diff --exit-code
        then
          echo "go mod not tidy"
          exit 1
        fi

    - name: Lint
      run: |
        make lint.all

  unit-tests:
    if: contains(github.head_ref, 'deps/') == false
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
        - kernel: linux
          os: ubuntu-latest
        - kernel: darwin
          os: macos-latest
        - kernel: windows
          os: windows-latest
      fail-fast: false
    steps:
    - uses: actions/checkout@v2
    - uses: actions/setup-go@v2
      with:
        go-version: 1.16.x
    - uses: arhat-dev/actions-setup-dukkha@master

    - name: Test Packages
      run: |
        dukkha golang local test credentialfs \
          -m pkg=./pkg -m kernel=${{ matrix.kernel }}

    - name: Test Commands
      run: |
        dukkha golang local test credentialfs \
          -m pkg=./cmd -m kernel=${{ matrix.kernel }}

    - uses: sonarsource/sonarqube-scan-action@v1.0.0
      env:
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}

  build-images:
    if: contains(github.head_ref, 'deps/') == false
    strategy:
      matrix:
        include:
        - os: ubuntu-latest
          kernel: linux
        # - os: windows-latest
        #   kernel: windows
    needs:
    - stylecheck
    - unit-tests
    runs-on: ${{ matrix.os }}
    steps:
    - uses: actions/checkout@v2
    - uses: arhat-dev/actions-setup-dukkha@master

    - name: Build and Push Images
      env:
        GHCR_USER: ${{ github.actor }}
        GHCR_PASS: ${{ secrets.GITHUB_TOKEN }}
      run: |
        dukkha buildah local build credentialfs \
          -m kernel=${{ matrix.kernel }}
        dukkha buildah local push credentialfs \
          -m kernel=${{ matrix.kernel }}
